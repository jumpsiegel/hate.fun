name: Complete Test Suite

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable

    - name: Run unit tests
      run: |
        echo "Running unit tests..."
        cargo test --lib

    - name: Run verification module tests
      run: |
        echo "Running verification module tests..."
        cargo test verification --lib

  build:
    name: Build Solana Program
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable

    - name: Cache Solana
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/solana/
          ~/.local/share/solana/
        key: solana-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Solana CLI
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/stable/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

    - name: Install cargo-build-sbf
      run: |
        sh -c "$(curl -sSfL https://release.anza.xyz/stable/install)"

    - name: Build Solana program
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        cargo build-sbf --manifest-path=Cargo.toml --sbf-out-dir=dist/program

    - name: Upload program binary
      uses: actions/upload-artifact@v4
      with:
        name: hate-fun-program
        path: dist/program/hate_fun.so

  kani-verification:
    name: Kani Formal Verification
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable

    - name: Cache Kani
      id: cache-kani
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/cargo-kani
          ~/.cargo/bin/kani
          ~/.kani
        key: ${{ runner.os }}-kani-0.65.0

    - name: Install Kani
      if: steps.cache-kani.outputs.cache-hit != 'true'
      run: |
        cargo install --locked kani-verifier
        cargo kani setup

    - name: Run Kani verification
      run: |
        cargo kani --tests

    - name: Upload verification results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: kani-results
        path: target/kani/

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable

    - name: Install Solana CLI
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/stable/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

    - name: Install cargo-build-sbf
      run: |
        sh -c "$(curl -sSfL https://release.anza.xyz/stable/install)"

    - name: Build program
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        ./scripts/build-native.sh

    - name: Start test validator
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        ./scripts/start-validator.sh

    - name: Deploy program
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        ./scripts/deploy-native.sh

    - name: Run integration tests
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        cargo test --test integration_client -- --ignored --nocapture

    - name: Stop validator
      if: always()
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        ./scripts/stop-validator.sh || true

  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, build, kani-verification, integration-tests]
    if: always()

    steps:
    - name: Check test results
      run: |
        echo "## Test Suite Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Test Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Unit Tests | ${{ needs.unit-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Build | ${{ needs.build.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Kani Verification | ${{ needs.kani-verification.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Integration Tests | ${{ needs.integration-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY

    - name: Fail if any tests failed
      if: |
        needs.unit-tests.result != 'success' ||
        needs.build.result != 'success' ||
        needs.kani-verification.result != 'success' ||
        needs.integration-tests.result != 'success'
      run: exit 1
